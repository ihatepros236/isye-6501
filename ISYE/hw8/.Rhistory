setwd("C:/Users/Muhammad/ISYE/hw8")
data <- read.table("uscrime.txt", stringsAsFactors = FALSE, header = TRUE)
install.packages('MASS')
library(MASS)
library(tidyverse)
library(caret)
library(leaps)
setwd("C:/Users/Muhammad/ISYE/hw8")
data <- read.table("uscrime.txt", stringsAsFactors = FALSE, header = TRUE)
View(data)
reg1 <- lm(Crime ~., data = data)
stepwise <- stepAIC(reg1, direction = "both", trace = FALSE)
summary(sepwise)
#Training for stepwise regression, validation through AIC
stepwise <- stepAIC(reg1, direction = "both", trace = FALSE)
summary(sepwise)
summary(stepwise)
install.packages("glmnet")
library(glmnet)
library(glmnet)
x<- data[,1:15]
View(x)
y<- data[,16]
fit <- glmnet(as.matrix(x), as.matrix(y))
#sacling data
data_scaled <- scale(data, center = TRUE, scale = TRUE)
x<- data1[,1:15]
y<- data1[,16]
fit <- glmnet(as.matrix(x), as.matrix(y))
#sacling data
data_scaled <- scale(data, center = TRUE, scale = TRUE)
x<- data_scaled[,1:15]
y<- data_scaled[,16]
fit <- glmnet(as.matrix(x), as.matrix(y))
summary(fit)
# Q11.1.2
fit_lasso <- glmnet(as.matrix(x), as.matrix(y))
summary(fit)
plot(fit_lasso)
# Q11.1.2
fit_lasso <- glmnet(as.matrix(x), as.matrix(y))
summary(fit_lasso)
plot(fit_lasso)
# Q11.1.2
fit_lasso <- glmnet(as.matrix(x), as.matrix(y), s = seq(0, 1, by=0.1))
# Q11.1.2
fit_lasso <- glmnet(as.matrix(x), as.matrix(y))
summary(fit_lasso)
plot(fit_lasso)
fit_lasso$lambda.min
# Q11.1.2
fit_lasso <- glmnet(as.matrix(x), as.matrix(y), family="mgaussian", alpha = 1)
summary(fit_lasso)
plot(fit_lasso)
cv.glm <- cv.glmnet(as.matrix(x), as.matrix(y), alpha=1)
plot(cv.glm)
#best value of lambda:
best_lambda <- cv.glmmod$lambda.min
#best value of lambda:
best_lambda <- cv.glm$lambda.min
best_lambda
library(MASS)
library(MASS)
library(glmnet)
setwd("C:/Users/Muhammad/ISYE/hw8")
data <- read.table("uscrime.txt", stringsAsFactors = FALSE, header = TRUE)
reg1 <- lm(Crime ~., data = data)
#Training for stepwise regression, validation through AIC
stepwise <- stepAIC(reg1, direction = "both", trace = FALSE)
#Best model using stepwise regression using both backward and forward selection
summary(stepwise)
#sacling data
data_scaled <- scale(data, center = TRUE, scale = TRUE)
x<- data_scaled[,1:15]
y<- data_scaled[,16]
# Q11.1.2
fit_lasso <- glmnet(as.matrix(x), as.matrix(y), family="mgaussian", alpha = 1)
summary(fit_lasso)
plot(fit_lasso)
# Q11.1.2
fit_lasso <- glmnet(as.matrix(x), as.matrix(y), family="mgaussian", alpha = 1)
summary(fit_lasso)
y<- data_scaled[,16]
# Q11.1.2
fit_lasso <- glmnet(as.matrix(x), as.matrix(y), family="mgaussian", alpha = 1)
summary(fit_lasso)
plot(fit_lasso)
# Q11.1.2
fit_lasso <- glmnet(as.matrix(x), as.matrix(y), family="mgaussian", alpha = 1)
summary(fit_lasso)
cv.glm <- cv.glmnet(as.matrix(x), as.matrix(y), alpha=1)
plot(cv.glm)
#best value of lambda:
best_lambda <- cv.glm$lambda.min
cv.glm <- cv.glmnet(as.matrix(x), as.matrix(y), alpha=1)
plot(cv.glm)
#best value of lambda:
best_lambda <- cv.glm$lambda.min
best_lambda
# Q11.1.2
fit_lasso <- glmnet(as.matrix(x), as.matrix(y), family="mgaussian", alpha = 1)
summary(fit_lasso)
plot(fit_lasso)
cv.glm <- cv.glmnet(as.matrix(x), as.matrix(y), alpha=1)
plot(cv.glm)
#best value of lambda:
best_lambda <- cv.glm$lambda.min
best_lambda
