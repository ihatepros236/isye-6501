setwrd("C:/Users/Muhammad")
setwd("C:/Users/Muhammad")
install.packages("leaflet")
library(tidyverse)
library(stats)
library(smooth)
setwd("C:/Users/Muhammad/ISYE/Hw5")
temp_data<- read.table("temps.txt", header = TRUE)
names(temp_data) = gsub(pattern = "X", replacement = "", x = names(temp_data))
temp_data <- data.frame(unlist(temp_data[,2:21]))
ts_temp= ts(temp_data, frequency = 123, start=1996)
summary(ts_temp)
ts.plot(ts_temp)
Model_HW_Mult<-HoltWinters(ts_temp, alpha=NULL, beta= NULL, gamma=NULL, seasonal="multiplicative")
summary(Model_HW_Mult)
plot(Model_HW_Mult)
Model_HW_ADD<-HoltWinters(ts_temp, alpha=NULL, beta= NULL, gamma=NULL, seasonal="additive")
summary(Model_HW_ADD)
plot(Model_HW_ADD)
set.seed(1)
Model_HW_Mult<-HoltWinters(ts_temp, seasonal="multiplicative")
summary(Model_HW_Mult)
plot(Model_HW_Mult)
cat("\tSeasonal factor:",Model_HW_Mult$gamma,"\n")
cat("Sum of squared Errors in Multiplicative model",Model_HW_Mult$SSE,"\n")
cat("Sum of squared Errors in Addititve model",Model_HW_ADD$SSE,"\n")
#Additive model has smaller SSE hence I am choosing additive seasonality, better way to do it would be using cross-validation but for now I am choosing seasonality as additive
#Lets visualize the trend to understand if the tempoerature is increasing
plot(fitted(Model_HW_ADD))
View(Model_HW_Mult)
Model_HW_Mult[["fitted"]]
fitted_data<- data.frame(Model_HW_ADD$fitted)
View(fitted_data)
fitted_data<- data.frame(Model_HW_ADD$fitted, ncol=123)
View(fitted_data)
fitted_data<- matrix(Model_HW_ADD$fitted[,4])
fitted_data<- matrix(Model_HW_ADD$fitted[,4],ncol = 123)
View(fitted_data)
fitted_data<- matrix(Model_HW_ADD$fitted[,4],nrow = 123)
View(fitted_data)
View(temp_data)
temp_data1<- read.table("temps.txt", header = TRUE)
names(temp_data1) = gsub(pattern = "X", replacement = "", x = names(temp_data1))
View(temp_data1)
Saeonality_data<- matrix(Model_HW_ADD$fitted[,4],nrow = 123)
temp_data1<- read.table("temps.txt", header = TRUE)
names(temp_data1) = gsub(pattern = "X", replacement = "", x = names(temp_data1))
View(Saeonality_data)
colnames(Seasonality_data) <- as.vector(t(temp_data1)[,1])
colnames(Saeonality_data) <- as.vector(t(temp_data1)[,1])
dim(season)
dim(Saeonality_data)
colnames(Saeonality_data)<-as.vector(t(temp_data1[,1]))
rownames(season)<-c(1997:2015)
rownames(Seasonality_data)<-c(1997:2015)
Seasonality_data<- matrix(Model_HW_ADD$fitted[,4],nrow = 123)
temp_data1<- read.table("temps.txt", header = TRUE)
names(temp_data1) = gsub(pattern = "X", replacement = "", x = names(temp_data1))
dim(Saeonality_data)
rownames(Seasonality_data)<-c(1997:2015)
colnames(Saeonality_data)<-as.vector(t(temp_data1[,1]))
colnames(Saeonality_data)<-as.vector((temp_data1[,1]))
colnames(Saeonality_data)<-as.vector((temp_data1[,1]))
colnames(Saeonality_data)<-(temp_data1[,1])
colnames(Saeonality_data)<-(temp_data1[1,])
dim(temp_data1)
dim(Saeonality_data)
colnames(Saeonality_data)<-(temp_data1[,1])
days <- temp_data1[,1]
colnames(Saeonality_data)<-days
rownames(Saeonality_data)<-days
colnames(Seasonality_data)<-c(1997:2015)
View(Seasonality_data)
days <- temp_data1[,1]
rownames(Saeonality_data)<-days
Seasonality_data<- matrix(Model_HW_ADD$fitted[,4],nrow = 123)
temp_data1<- read.table("temps.txt", header = TRUE)
names(temp_data1) = gsub(pattern = "X", replacement = "", x = names(temp_data1))
dim(Saeonality_data)
dim(temp_data1)
colnames(Seasonality_data)<-c(1997:2015)
days <- temp_data1[,1]
rownames(Seasonality_data)<-days
cumsum_df <- data.frame(matrix(nrow=123, ncol=19))
View(cumsum_df)
cumsum_df <- data.frame(matrix(nrow=123, ncol=19))
rownames(cumsum_df) <-days
cumsum_data <- data.frame(matrix(nrow=123, ncol=19))
rownames(cumsum_data) <-days
colnames(cumsum_data)<-c(1997:2015)
View(cumsum_data)
cumsum_data <- data.frame(matrix(0, nrow=123, ncol=19))
rownames(cumsum_data) <-days
colnames(cumsum_data)<-c(1997:2015)
mean_year1= mean(Seasonality_data[,1])
var=sd(Seasonality_data[,1])
for(i in 1:ncol(cumsum_data)){
date_change=NULL
for (j in 1:nrow(cumsum_data)){
val=Seasonality_data[j,i]
cumsum_data[j,i] <- max(0, cumsum_data[j-1,i] + (mean_year1 - val- var*0.5))
if (cumsum_data[j,i]>=threshold){
cat("Year",colnames(cumsum_data[i]),"Day winter started is:",
rownames(cumsum_data)[j],"Day","\n")
break
}
}
}
mean_year1= mean(Seasonality_data[,1])
var=sd(Seasonality_data[,1])
day_counter=1
threshold= var*3
for(i in 1:ncol(cumsum_data)){
date_change=NULL
for (j in 1:nrow(cumsum_data)){
val=Seasonality_data[j,i]
cumsum_data[j,i] <- max(0, cumsum_data[j-1,i] + (mean_year1 - val- var*0.5))
if (cumsum_data[j,i]>=threshold){
cat("Year",colnames(cumsum_data[i]),"Day winter started is:",
rownames(cumsum_data)[j],"Day","\n")
break
}
}
}
