plot(cv.data$size, cv.data$dev, type = "b")
tree.data <- tree(Crime~., data = data)
summary(tree.data)
tree.data$frame
plot(tree.data)
text(tree.data)
cv.data <- cv.tree(tree.data)
plot(cv.data$size, cv.data$dev, type = "b")
set.seed(1)
tree.data <- tree(Crime~., data = data)
summary(tree.data)
tree.data$frame
plot(tree.data)
text(tree.data)
cv.data <- cv.tree(tree.data)
plot(cv.data$size, cv.data$dev, type = "b")
set.seed(1)
tree.data <- tree(Crime~., data = data)
summary(tree.data)
tree.data$frame
plot(tree.data)
text(tree.data)
cv.data <- cv.tree(tree.data)
plot(cv.data$size, cv.data$dev, type = "b")
tree.data <- tree(Crime~., data = data)
summary(tree.data)
tree.data$frame
plot(tree.data)
text(tree.data)
cv.data <- cv.tree(tree.data)
plot(cv.data$size, cv.data$dev, type = "b")
termnodes <- 2
prune.data <- prune.tree(tree.data, best = termnodes)
plot(prune.data)
text(prune.data)
yhat <- predict(tree.data)
SSres <- sum((yhat-data$Crime)^2)
plot(data$Crime, yhat)
termnodes <- 7
prune.data <- prune.tree(tree.data, best = termnodes)
plot(prune.data)
cv.data <- cv.tree(tree.data)
plot(cv.data$size, cv.data$dev, type = "b")
set.seed(1)
tree.data <- tree(Crime~., data = data)
summary(tree.data)
tree.data$frame
plot(tree.data)
text(tree.data)
cv.data <- cv.tree(tree.data)
plot(cv.data$size, cv.data$dev, type = "b")
termnodes <- 7
prune.data <- prune.tree(tree.data, best = termnodes)
plot(prune.data)
text(prune.data)
yhat <- predict(tree.data)
SSres <- sum((yhat-data$Crime)^2)
plot(data$Crime, yhat)
abline(0,1)
plot(data$Crime, scale(yhat - data$Crime))
abline(0,0)
SStot <- sum((data$Crime - mean(data$Crime))^2)
R2 <- 1 - SSres/SStot
R2
prune.tree(tree.data)$size
prune.tree(tree.data)$dev
cv.data <- cv.tree(tree.data) # cross-validation
cv.data$size
cv.data$dev
prune.data <- prune.tree(tree.data,best=2)
prune.data$where
cv.data <- cv.tree(tree.data) # cross-validation
cv.data$size
cv.data$dev
prune.data <- prune.tree(tree.data,best=3)
prune.data$where
p <- predict(prune.data)
prune.data <- prune.tree(tree.data,best=3)
prune.data$where
p <- predict(prune.data)
1 - sum((p - data$Crime)^2)/SStot
termnodes <- 5
prune.data <- prune.tree(tree.data, best = termnodes)
plot(prune.data)
text(prune.data)
yhat <- predict(tree.data)
SSres <- sum((yhat-data$Crime)^2)
plot(data$Crime, yhat)
abline(0,1)
plot(data$Crime, scale(yhat - data$Crime))
abline(0,0)
SStot <- sum((data$Crime - mean(data$Crime))^2)
R2 <- 1 - SSres/SStot
R2
prune.tree(tree.data)$size
prune.tree(tree.data)$dev
cv.data <- cv.tree(tree.data) # cross-validation
cv.data$size
cv.data$dev
prune.data <- prune.tree(tree.data,best=2)
prune.data$where
p <- predict(prune.data)
1 - sum((p - data$Crime)^2)/SStot
cv.data <- cv.tree(prune.data)
cv.data$size
cv.data$dev
# Separate rows of data in each leaf
d1 <- data[which(prune.data$where == 2),]
d2 <- data[which(prune.data$where == 3),]
m1 <- lm(Crime~.,data=d1)
summary(m1)
m1b <- lm(Crime~Ed+Pop+Prob+Time,data=d1)
summary(m1b)
m1c <- lm(Crime~Pop+Time,data=d1)
summary(m1c)
m1d <- lm(Crime~Pop,data=d1)
summary(m1d)
c1d <- cv.lm(d1,m1d,m=nrow(d1))
p1 <- prcomp(~.,data=d1[,1:15],scale.=TRUE)
mp1 <- lm(V1~.,data=as.data.frame(cbind(d1[,16],p1$x[,1:2])))
summary(mp1)
summary(m1c)
m2 <- lm(Crime~.,data=d2)
summary(m2)
m2b <- lm(Crime~Ineq,data=d2)
summary(m2b)
p2 <- prcomp(~.,data=d2[,1:15],scale.=TRUE)
mp2 <- lm(V1~.,data=as.data.frame(cbind(d2[,16],p2$x[,1:2])))
summary(mp2)
install.packages("rpart")
library(rpart)
set.seed(1)
tree.data.2 <- rpart(Crime~., data = data)
summary(tree.data.2)
tree.data.2$frame
plot(tree.data.2)
text(tree.data.2)
yhat.2 <- predict(tree.data.2)
SSres.2 <- sum((yhat.2-data$Crime)^2)
plot(data$Crime, yhat.2)
abline(0,1)
plot(data$Crime, scale(yhat.2 - data$Crime))
abline(0,0)
SStot.2 <- sum((data$Crime - mean(data$Crime))^2)
R2.2 <- 1 - SSres.2/SStot.2
R2.2
# -------------------- Code for Question 10.1-b -----------------------------
# Clear environment
setwd("C:/Users/Muhammad/ISYE/hw7")
rm(list = ls())
set.seed(1)
data <- read.table("uscrime.txt", stringsAsFactors = FALSE, header = TRUE)
install.packages("randomForest")
library(randomForest)
set.seed(1)
numpred <- 4
rf.data <- randomForest(Crime~., data = data, mtry = numpred, importance = TRUE)
rf.data
yhat.rf <- predict(rf.data)
SSres <- sum((yhat.rf-data$Crime)^2)
plot(data$Crime, yhat.rf)
abline(0,1)
plot(data$Crime, scale(yhat.rf - data$Crime))
abline(0,0)
SStot <- sum((data$Crime - mean(data$Crime))^2)
R2 <- 1 - SSres/SStot
R2
SSE <- 0
for (i in 1:nrow(data)) {
rd <- randomForest(Crime~., data = data[-i,], mtry = numpred, importance = TRUE)
SSE = SSE + (predict(rd,newdata=data[i,]) - data[i,16])^2
}
1 - SSE/SStot
SSE1 <- 0
SSE2 <- 0
SStot1 <- 0
SStot2 <- 0
for (i in 1:nrow(data)) {
rd <- randomForest(Crime~., data = data[-i,], mtry = numpred, importance = TRUE)
if (data[i,]$Po1 < 7.65) {
SSE1 = SSE1 + (predict(rd,newdata=data[i,]) - data[i,16])^2
SStot1 = SStot1 + (data[i,16] - mean(data[,16]))^2
} else {
SSE2 = SSE2 + (predict(rd,newdata=data[i,]) - data[i,16])^2
SStot2 = SStot2 + (data[i,16] - mean(data[,16]))^2
}
}
1 - SSE1/SStot1
1 - SSE2/SStot2
importance(rf.data)
varImpPlot(rf.data)
rm(list=ls())
setwd("C:/Users/Muhammad/ISYE/hw7")
data<-read.table("germancredit.txt",sep = " ")
View(data)
data$V21[data$V21==1]<-0
data$V21[data$V21==2]<-1
set.seed(1)
m <- nrow(data)
trn <- sample(1:m, size = round(m*0.7), replace = FALSE)
d.learn <- data[trn,]
d.valid <- data[-trn,]
reg = glm(V21 ~.,family=binomial(link = "logit"),data=d.learn)
summary(reg)
reg = glm(V21 ~ V1+V2+V3+V4+V5+V6+V7+V8+V9+V10+V12+V14+V16+V20,family=binomial(link = "logit"),data=d.learn)
summary(reg)
reg = glm(V21 ~ V1+V2+V3+V4+V5+V6+V8+V9+V10+V14+V20,family=binomial(link = "logit"),data=d.learn)
summary(reg)
d.learn$V1A13[d.learn$V1 == "A13"] <- 1
d.learn$V1A13[d.learn$V1 == "A13"] <- 1
d.learn$V1A13[d.learn$V1 != "A13"] <- 0
d.learn$V1A14[d.learn$V1 == "A14"] <- 1
d.learn$V1A14[d.learn$V1 != "A14"] <- 0
d.learn$V3A32[d.learn$V3 == "A32"] <- 1
d.learn$V3A32[d.learn$V3 != "A32"] <- 0
d.learn$V3A33[d.learn$V3 == "A33"] <- 1
d.learn$V3A33[d.learn$V3 != "A33"] <- 0
d.learn$V3A34[d.learn$V3 == "A34"] <- 1
d.learn$V3A34[d.learn$V3 != "A34"] <- 0
d.learn$V4A41[d.learn$V4 == "A41"] <- 1
d.learn$V4A41[d.learn$V4 != "A41"] <- 0
d.learn$V4A410[d.learn$V4 == "A410"] <- 1
d.learn$V4A410[d.learn$V4 != "A410"] <- 0
d.learn$V4A42[d.learn$V4 == "A42"] <- 1
d.learn$V4A42[d.learn$V4 != "A42"] <- 0
d.learn$V4A43[d.learn$V4 == "A43"] <- 1
d.learn$V4A43[d.learn$V4 != "A43"] <- 0
d.learn$V4A48[d.learn$V4 == "A48"] <- 1
d.learn$V4A48[d.learn$V4 != "A48"] <- 0
d.learn$V4A49[d.learn$V4 == "A49"] <- 1
d.learn$V4A49[d.learn$V4 != "A49"] <- 0
d.learn$V6A63[d.learn$V6 == "A63"] <- 1
d.learn$V6A63[d.learn$V6 != "A63"] <- 0
d.learn$V6A65[d.learn$V6 == "A65"] <- 1
d.learn$V6A65[d.learn$V6 != "A65"] <- 0
d.learn$V9A93[d.learn$V9 == "A93"] <- 1
d.learn$V9A93[d.learn$V9 != "A93"] <- 0
d.learn$V10A103[d.learn$V10 == "A103"] <- 1
d.learn$V10A103[d.learn$V10 != "A103"] <- 0
d.learn$V14A143[d.learn$V14 == "A143"] <- 1
d.learn$V14A143[d.learn$V14 != "A143"] <- 0
d.learn$V20A202[d.learn$V20 == "A202"] <- 1
d.learn$V20A202[d.learn$V20 != "A202"] <- 0
reg = glm(V21 ~ V1A13 + V1A14 + V2 + V3A32 + V3A33 + V3A34 + V4A41 + V4A410 + V4A42 + V4A43 + V4A48 + V4A49 + V5 + V6A63 + V6A65 + V8 + V9A93 + V10A103 + V14A143 + V20A202,family=binomial(link = "logit"),data=d.learn)
summary(reg)
reg = glm(V21 ~ V1A13 + V1A14 + V2 + V3A32 + V3A33 + V3A34 + V4A41 + V4A410 + V4A42 + V4A43 + V4A49 + V5 + V6A65 + V8 + V9A93 + V10A103 + V14A143,family=binomial(link = "logit"),data=d.learn)
summary(reg)
d.valid$V1A13[d.valid$V1 == "A13"] <- 1
d.valid$V1A13[d.valid$V1 != "A13"] <- 0
d.valid$V1A14[d.valid$V1 == "A14"] <- 1
d.valid$V1A14[d.valid$V1 != "A14"] <- 0
d.valid$V3A32[d.valid$V3 == "A32"] <- 1
d.valid$V3A32[d.valid$V3 != "A32"] <- 0
d.valid$V3A33[d.valid$V3 == "A33"] <- 1
d.valid$V3A33[d.valid$V3 != "A33"] <- 0
d.valid$V3A34[d.valid$V3 == "A34"] <- 1
d.valid$V3A34[d.valid$V3 != "A34"] <- 0
d.valid$V4A41[d.valid$V4 == "A41"] <- 1
d.valid$V4A41[d.valid$V4 != "A41"] <- 0
d.valid$V4A410[d.valid$V4 == "A410"] <- 1
d.valid$V4A410[d.valid$V4 != "A410"] <- 0
d.valid$V4A42[d.valid$V4 == "A42"] <- 1
d.valid$V4A42[d.valid$V4 != "A42"] <- 0
d.valid$V4A43[d.valid$V4 == "A43"] <- 1
d.valid$V4A43[d.valid$V4 != "A43"] <- 0
d.valid$V4A49[d.valid$V4 == "A49"] <- 1
d.valid$V4A49[d.valid$V4 != "A49"] <- 0
d.valid$V6A65[d.valid$V6 == "A65"] <- 1
d.valid$V6A65[d.valid$V6 != "A65"] <- 0
d.valid$V9A93[d.valid$V9 == "A93"] <- 1
d.valid$V9A93[d.valid$V9 != "A93"] <- 0
d.valid$V10A103[d.valid$V10 == "A103"] <- 1
d.valid$V10A103[d.valid$V10 != "A103"] <- 0
d.valid$V14A143[d.valid$V14 == "A143"] <- 1
d.valid$V14A143[d.valid$V14 != "A143"] <- 0
y_hat<-predict(reg,d.valid,type = "response")
y_hat
y_hat_round <- as.integer(y_hat > 0.5)
y_hat_round <- as.integer(y_hat > 0.5)
t <- table(y_hat_round,d.valid$V21)
t
acc <- (t[1,1] + t[2,2]) / sum(t)
acc
library(pROC)
r<-roc(d.valid$V21,y_hat_round)
plot(r,main="ROC curve")
r
acc <- c()
auc <- c()
for (i in 1:9) {
y_hat_round <- as.integer(y_hat > i/10)
t <- table(y_hat_round,d.valid$V21)
acc <- cbind(acc,(t[1,1] + t[2,2]) / sum(t))
r<-roc(d.valid$V21,y_hat_round)
auc <- cbind(auc,r$auc)
}
acc
auc
loss <- c()
for(i in 1:100)
{
y_hat_round <- as.integer(y_hat > (i/100)) # calculate threshold predictions
tm <-as.matrix(table(y_hat_round,d.valid$V21))
if(nrow(tm)>1) { c1 <- tm[2,1] } else { c1 <- 0 }
if(ncol(tm)>1) { c2 <- tm[1,2] } else { c2 <- 0 }
loss <- c(loss, c2*5 + c1)
}
plot(c(1:100)/100,loss,xlab = "Threshold",ylab = "Loss",main = "Loss vs Threshold")
which.min(loss)
loss
loss[24]
y_hat_round <- as.integer(y_hat > (which.min(loss)/100)) # find 0/1 predictions
t <- table(y_hat_round,d.valid$V21) # put in table form
acc <- (t[1,1] + t[2,2]) / sum(t) # calculate accuracy
r<-roc(d.valid$V21,y_hat_round) # calculate ROC curve
auc <- r$auc # get AUC
acc
auc
rm(list = ls())
library(DAAG)
set.seed(1)
data <- read.table("uscrime.txt", stringsAsFactors = FALSE, header = TRUE)
head(data)
# -------------------- Code for Question 10.1-a -----------------------------
# Clear environment
setwd("C:/Users/Muhammad/ISYE/hw7")
rm(list = ls())
library(DAAG)
set.seed(1)
data <- read.table("uscrime.txt", stringsAsFactors = FALSE, header = TRUE)
install.packages("tree")
install.packages("tree")
library(tree)
set.seed(1)
tree.data <- tree(Crime~., data = data)
summary(tree.data)
tree.data$frame
plot(tree.data)
text(tree.data)
cv.data <- cv.tree(tree.data)
plot(cv.data$size, cv.data$dev, type = "b")
termnodes <- 5
prune.data <- prune.tree(tree.data, best = termnodes)
plot(prune.data)
text(prune.data)
yhat <- predict(tree.data)
SSres <- sum((yhat-data$Crime)^2)
plot(data$Crime, yhat)
abline(0,1)
plot(data$Crime, scale(yhat - data$Crime))
abline(0,0)
SStot <- sum((data$Crime - mean(data$Crime))^2)
R2 <- 1 - SSres/SStot
R2
prune.tree(tree.data)$size
prune.tree(tree.data)$dev
cv.data <- cv.tree(tree.data) # cross-validation
cv.data$size
cv.data$dev
prune.data <- prune.tree(tree.data,best=2)
prune.data$where
p <- predict(prune.data)
1 - sum((p - data$Crime)^2)/SStot
cv.data <- cv.tree(prune.data)
cv.data$size
cv.data$dev
# Separate rows of data in each leaf
d1 <- data[which(prune.data$where == 2),]
d2 <- data[which(prune.data$where == 3),]
m1 <- lm(Crime~.,data=d1)
summary(m1)
m1 <- lm(Crime~.,data=d1)
summary(m1)
m1b <- lm(Crime~Ed+Pop+Prob+Time,data=d1)
summary(m1b)
m1c <- lm(Crime~Pop+Time,data=d1)
summary(m1c)
m1d <- lm(Crime~Pop,data=d1)
summary(m1d)
c1d <- cv.lm(d1,m1d,m=nrow(d1))
1 - attr(c1d,"ms")*nrow(d1)/sum((d1$Crime - mean(d1$Crime))^2)
p1 <- prcomp(~.,data=d1[,1:15],scale.=TRUE)
mp1 <- lm(V1~.,data=as.data.frame(cbind(d1[,16],p1$x[,1:2])))
summary(mp1)
mp2 <- lm(V1~.,data=as.data.frame(cbind(d1[,16],p1$x[,2])))
summary(mp2)
cm2 <- cv.lm(as.data.frame(cbind(d1[,16],p1$x[,2])),mp2,m=nrow(d1))
cm2 <- cv.lm(as.data.frame(cbind(d1[,16],p1$x[,2])),mp2,m=nrow(d1))
1 - attr(cm2,"ms")*nrow(d1)/sum((d1$Crime - mean(d1$Crime))^2)
m2 <- lm(Crime~.,data=d2)
m2 <- lm(Crime~.,data=d2)
summary(m2)
m2b <- lm(Crime~Ineq,data=d2)
summary(m2b)
p2 <- prcomp(~.,data=d2[,1:15],scale.=TRUE)
mp2 <- lm(V1~.,data=as.data.frame(cbind(d2[,16],p2$x[,1:2])))
summary(mp2)
p1 <- prcomp(~.,data=d1[,1:15],scale.=TRUE)
mp1 <- lm(V1~.,data=as.data.frame(cbind(d1[,16],p1$x[,1:2])))
summary(mp1)
mp2 <- lm(V1~.,data=as.data.frame(cbind(d1[,16],p1$x[,2])))
summary(mp2)
cm2 <- cv.lm(as.data.frame(cbind(d1[,16],p1$x[,2])),mp2,m=nrow(d1))
1 - attr(cm2,"ms")*nrow(d1)/sum((d1$Crime - mean(d1$Crime))^2)
m2 <- lm(Crime~.,data=d2)
summary(m2)
m2b <- lm(Crime~Ineq,data=d2)
summary(m2b)
p2 <- prcomp(~.,data=d2[,1:15],scale.=TRUE)
mp2 <- lm(V1~.,data=as.data.frame(cbind(d2[,16],p2$x[,1:2])))
summary(mp2)
library(rpart)
tree.data <- tree(Crime~., data = data)
summary(tree.data)
tree.data <- tree(Crime~., data = data)
summary(tree.data)
tree.data$frame
plot(tree.data)
text(tree.data)
cv.data <- cv.tree(tree.data)
cv.data <- cv.tree(tree.data)
plot(cv.data$size, cv.data$dev, type = "b")
termnodes <- 5
termnodes <- 5
prune.data <- prune.tree(tree.data, best = termnodes)
plot(prune.data)
text(prune.data)
yhat <- predict(tree.data)
SSres <- sum((yhat-data$Crime)^2)
plot(data$Crime, yhat)
abline(0,1)
plot(data$Crime, scale(yhat - data$Crime))
abline(0,0)
SStot <- sum((data$Crime - mean(data$Crime))^2)
SStot <- sum((data$Crime - mean(data$Crime))^2)
R2 <- 1 - SSres/SStot
R2
prune.tree(tree.data)$size
prune.tree(tree.data)$dev
cv.data <- cv.tree(tree.data) # cross-validation
cv.data$size
cv.data$dev
prune.data <- prune.tree(tree.data,best=2)
prune.data$where
p <- predict(prune.data)
1 - sum((p - data$Crime)^2)/SStot
cv.data <- cv.tree(prune.data)
cv.data$size
cv.data$dev
m1 <- lm(Crime~.,data=d1)
summary(m1)
m1b <- lm(Crime~Ed+Pop+Prob+Time,data=d1)
summary(m1b)
m1c <- lm(Crime~Pop+Time,data=d1)
summary(m1c)
m1d <- lm(Crime~Pop,data=d1)
summary(m1d)
c1d <- cv.lm(d1,m1d,m=nrow(d1))
c1d <- cv.lm(d1,m1d,m=nrow(d1))
1 - attr(c1d,"ms")*nrow(d1)/sum((d1$Crime - mean(d1$Crime))^2)
p1 <- prcomp(~.,data=d1[,1:15],scale.=TRUE)
mp1 <- lm(V1~.,data=as.data.frame(cbind(d1[,16],p1$x[,1:2])))
summary(mp1)
mp2 <- lm(V1~.,data=as.data.frame(cbind(d1[,16],p1$x[,2])))
summary(mp2)
cm2 <- cv.lm(as.data.frame(cbind(d1[,16],p1$x[,2])),mp2,m=nrow(d1))
1 - attr(cm2,"ms")*nrow(d1)/sum((d1$Crime - mean(d1$Crime))^2)
m2 <- lm(Crime~.,data=d2)
summary(m2)
m2b <- lm(Crime~Ineq,data=d2)
summary(m2b)
p2 <- prcomp(~.,data=d2[,1:15],scale.=TRUE)
mp2 <- lm(V1~.,data=as.data.frame(cbind(d2[,16],p2$x[,1:2])))
summary(mp2)
library(rpart)
set.seed(1)
# -------------------- Code for Question 10.1-b -----------------------------
# Clear environment
setwd("C:/Users/Muhammad/ISYE/hw7")
rm(list = ls())
set.seed(1)
data <- read.table("uscrime.txt", stringsAsFactors = FALSE, header = TRUE)
head(data)
library(randomForest)
# -------------------- Code for Question 10.1-b -----------------------------
# Clear environment
setwd("C:/Users/Muhammad/ISYE/hw7")
rm(list = ls())
set.seed(1)
data <- read.table("uscrime.txt", stringsAsFactors = FALSE, header = TRUE)
library(randomForest)
set.seed(1)
numpred <- 4
rf.data <- randomForest(Crime~., data = data, mtry = numpred, importance = TRUE)
rf.data
yhat.rf <- predict(rf.data)
yhat.rf <- predict(rf.data)
SSres <- sum((yhat.rf-data$Crime)^2)
plot(data$Crime, yhat.rf)
abline(0,1)
plot(data$Crime, scale(yhat.rf - data$Crime))
abline(0,0)
SStot <- sum((data$Crime - mean(data$Crime))^2)
R2 <- 1 - SSres/SStot
R2
SSE <- 0
for (i in 1:nrow(data)) {
rd <- randomForest(Crime~., data = data[-i,], mtry = numpred, importance = TRUE)
SSE = SSE + (predict(rd,newdata=data[i,]) - data[i,16])^2
}
1 - SSE/SStot
rm(list = ls())
